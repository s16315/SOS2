// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SOS.Persistance;

namespace SOS.Migrations
{
    [DbContext(typeof(SosDBContext))]
    partial class SosDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SOS.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("InstructorId");

                    b.Property<int?>("LanguageId");

                    b.Property<DateTime>("LastUpdate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("InstructorId");

                    b.HasIndex("LanguageId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("SOS.Models.DailyPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DayNo");

                    b.Property<int>("DayNoInWeek");

                    b.Property<DateTime>("LastUpdate");

                    b.Property<int?>("WeeklyPlanId");

                    b.HasKey("Id");

                    b.HasIndex("WeeklyPlanId");

                    b.ToTable("DailyPlans");
                });

            modelBuilder.Entity("SOS.Models.DailyRoomPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DailyPlanId");

                    b.Property<DateTime>("LastUpdate");

                    b.Property<int?>("Lesson01Id");

                    b.Property<int?>("Lesson02Id");

                    b.Property<int?>("Lesson03Id");

                    b.Property<int?>("Lesson04Id");

                    b.Property<int?>("Lesson05Id");

                    b.Property<int?>("Lesson06Id");

                    b.Property<int?>("Lesson07Id");

                    b.Property<int?>("Lesson08Id");

                    b.Property<int?>("Lesson09Id");

                    b.Property<int?>("Lesson10Id");

                    b.Property<int?>("RoomId1");

                    b.HasKey("Id");

                    b.HasIndex("DailyPlanId");

                    b.HasIndex("Lesson01Id");

                    b.HasIndex("Lesson02Id");

                    b.HasIndex("Lesson03Id");

                    b.HasIndex("Lesson04Id");

                    b.HasIndex("Lesson05Id");

                    b.HasIndex("Lesson06Id");

                    b.HasIndex("Lesson07Id");

                    b.HasIndex("Lesson08Id");

                    b.HasIndex("Lesson09Id");

                    b.HasIndex("Lesson10Id");

                    b.HasIndex("RoomId1");

                    b.ToTable("DailyRoomPlans");
                });

            modelBuilder.Entity("SOS.Models.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LanguageId");

                    b.Property<DateTime>("LastUpdate");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("PersonId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PersonId");

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("SOS.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("LastUpdate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("SOS.Models.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CourseId");

                    b.Property<DateTime>("LastUpdate");

                    b.Property<bool>("Replacement");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("SOS.Models.MonthlyPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("LastUpdate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int?>("YearlyPlanId");

                    b.HasKey("Id");

                    b.HasIndex("YearlyPlanId");

                    b.ToTable("MonthlyPlans");
                });

            modelBuilder.Entity("SOS.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastUpdate");

                    b.HasKey("Id");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("SOS.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("LastUpdate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("SOS.Models.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("LastUpdate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("SOS.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("LastUpdate");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("PersonId");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SOS.Models.StudentCourse", b =>
                {
                    b.Property<int>("StudentId");

                    b.Property<int>("CourseId");

                    b.Property<int>("Id");

                    b.Property<DateTime>("LastUpdate");

                    b.HasKey("StudentId", "CourseId");

                    b.HasAlternateKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentCourses");
                });

            modelBuilder.Entity("SOS.Models.WeeklyPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("LastUpdate");

                    b.Property<int?>("MonthlyPlanId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("MonthlyPlanId");

                    b.ToTable("WeeklyPlans");
                });

            modelBuilder.Entity("SOS.Models.YearlyPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("LastUpdate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int?>("ScheduleId");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.ToTable("YearlyPlans");
                });

            modelBuilder.Entity("SOS.Models.Course", b =>
                {
                    b.HasOne("SOS.Models.Instructor", "Instructor")
                        .WithMany()
                        .HasForeignKey("InstructorId");

                    b.HasOne("SOS.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");
                });

            modelBuilder.Entity("SOS.Models.DailyPlan", b =>
                {
                    b.HasOne("SOS.Models.WeeklyPlan")
                        .WithMany("DailyPlans")
                        .HasForeignKey("WeeklyPlanId");
                });

            modelBuilder.Entity("SOS.Models.DailyRoomPlan", b =>
                {
                    b.HasOne("SOS.Models.DailyPlan")
                        .WithMany("DailyRoomPlans")
                        .HasForeignKey("DailyPlanId");

                    b.HasOne("SOS.Models.Lesson", "Lesson01")
                        .WithMany()
                        .HasForeignKey("Lesson01Id");

                    b.HasOne("SOS.Models.Lesson", "Lesson02")
                        .WithMany()
                        .HasForeignKey("Lesson02Id");

                    b.HasOne("SOS.Models.Lesson", "Lesson03")
                        .WithMany()
                        .HasForeignKey("Lesson03Id");

                    b.HasOne("SOS.Models.Lesson", "Lesson04")
                        .WithMany()
                        .HasForeignKey("Lesson04Id");

                    b.HasOne("SOS.Models.Lesson", "Lesson05")
                        .WithMany()
                        .HasForeignKey("Lesson05Id");

                    b.HasOne("SOS.Models.Lesson", "Lesson06")
                        .WithMany()
                        .HasForeignKey("Lesson06Id");

                    b.HasOne("SOS.Models.Lesson", "Lesson07")
                        .WithMany()
                        .HasForeignKey("Lesson07Id");

                    b.HasOne("SOS.Models.Lesson", "Lesson08")
                        .WithMany()
                        .HasForeignKey("Lesson08Id");

                    b.HasOne("SOS.Models.Lesson", "Lesson09")
                        .WithMany()
                        .HasForeignKey("Lesson09Id");

                    b.HasOne("SOS.Models.Lesson", "Lesson10")
                        .WithMany()
                        .HasForeignKey("Lesson10Id");

                    b.HasOne("SOS.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId1");
                });

            modelBuilder.Entity("SOS.Models.Instructor", b =>
                {
                    b.HasOne("SOS.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SOS.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SOS.Models.Lesson", b =>
                {
                    b.HasOne("SOS.Models.Course")
                        .WithMany("Lessons")
                        .HasForeignKey("CourseId");
                });

            modelBuilder.Entity("SOS.Models.MonthlyPlan", b =>
                {
                    b.HasOne("SOS.Models.YearlyPlan")
                        .WithMany("MonthlyPlans")
                        .HasForeignKey("YearlyPlanId");
                });

            modelBuilder.Entity("SOS.Models.Student", b =>
                {
                    b.HasOne("SOS.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SOS.Models.StudentCourse", b =>
                {
                    b.HasOne("SOS.Models.Course", "Course")
                        .WithMany("StudentCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SOS.Models.Student", "Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SOS.Models.WeeklyPlan", b =>
                {
                    b.HasOne("SOS.Models.MonthlyPlan")
                        .WithMany("WeeklyPlans")
                        .HasForeignKey("MonthlyPlanId");
                });

            modelBuilder.Entity("SOS.Models.YearlyPlan", b =>
                {
                    b.HasOne("SOS.Models.Schedule")
                        .WithMany("YearlyPlans")
                        .HasForeignKey("ScheduleId");
                });
#pragma warning restore 612, 618
        }
    }
}
