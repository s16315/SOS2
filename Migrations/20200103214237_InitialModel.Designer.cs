// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SOS.Persistance;

namespace SOS.Migrations
{
    [DbContext(typeof(SosDBContext))]
    [Migration("20200103214237_InitialModel")]
    partial class InitialModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SOS.Models.DailyPlanLesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("DailyPlanLessons");
                });

            modelBuilder.Entity("SOS.Models.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Replacement");

                    b.HasKey("Id");

                    b.ToTable("Lesson");
                });

            modelBuilder.Entity("SOS.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DailyPlanLessonId");

                    b.Property<int?>("Lesson01Id");

                    b.Property<int?>("Lesson02Id");

                    b.Property<int?>("Lesson03Id");

                    b.Property<int?>("Lesson04Id");

                    b.Property<int?>("Lesson05Id");

                    b.Property<int?>("Lesson06Id");

                    b.Property<int?>("Lesson07Id");

                    b.Property<int?>("Lesson08Id");

                    b.Property<int?>("Lesson09Id");

                    b.Property<int?>("Lesson10Id");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("DailyPlanLessonId");

                    b.HasIndex("Lesson01Id");

                    b.HasIndex("Lesson02Id");

                    b.HasIndex("Lesson03Id");

                    b.HasIndex("Lesson04Id");

                    b.HasIndex("Lesson05Id");

                    b.HasIndex("Lesson06Id");

                    b.HasIndex("Lesson07Id");

                    b.HasIndex("Lesson08Id");

                    b.HasIndex("Lesson09Id");

                    b.HasIndex("Lesson10Id");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("SOS.Models.Room", b =>
                {
                    b.HasOne("SOS.Models.DailyPlanLesson")
                        .WithMany("Rooms")
                        .HasForeignKey("DailyPlanLessonId");

                    b.HasOne("SOS.Models.Lesson", "Lesson01")
                        .WithMany()
                        .HasForeignKey("Lesson01Id");

                    b.HasOne("SOS.Models.Lesson", "Lesson02")
                        .WithMany()
                        .HasForeignKey("Lesson02Id");

                    b.HasOne("SOS.Models.Lesson", "Lesson03")
                        .WithMany()
                        .HasForeignKey("Lesson03Id");

                    b.HasOne("SOS.Models.Lesson", "Lesson04")
                        .WithMany()
                        .HasForeignKey("Lesson04Id");

                    b.HasOne("SOS.Models.Lesson", "Lesson05")
                        .WithMany()
                        .HasForeignKey("Lesson05Id");

                    b.HasOne("SOS.Models.Lesson", "Lesson06")
                        .WithMany()
                        .HasForeignKey("Lesson06Id");

                    b.HasOne("SOS.Models.Lesson", "Lesson07")
                        .WithMany()
                        .HasForeignKey("Lesson07Id");

                    b.HasOne("SOS.Models.Lesson", "Lesson08")
                        .WithMany()
                        .HasForeignKey("Lesson08Id");

                    b.HasOne("SOS.Models.Lesson", "Lesson09")
                        .WithMany()
                        .HasForeignKey("Lesson09Id");

                    b.HasOne("SOS.Models.Lesson", "Lesson10")
                        .WithMany()
                        .HasForeignKey("Lesson10Id");
                });
#pragma warning restore 612, 618
        }
    }
}
